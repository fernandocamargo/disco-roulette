{"ast":null,"code":"import _slicedToArray from \"/Users/fernandocamargodelbuono/_dev/disco-roulette/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nexport default _s(function () {\n  _s();\n\n  var _useState = useState(getInitialState()),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var fail = useCallback(function (_ref) {\n    var error = _ref.message;\n    return setState(update({\n      error: error\n    }));\n  }, []);\n  var set = useCallback(function (response) {\n    var releases = response.reduce(flatten);\n    var index = random(releases.length);\n    return setState(update({\n      index: index,\n      releases: releases\n    }));\n  }, []);\n  var succeed = useCallback(function (folders) {\n    return Promise.all(folders.map(getReleases)).then(set);\n  }, [set]);\n  var shuffle = useCallback(function () {\n    return setState(update({\n      index: random(state.releases.length)\n    }));\n  }, [state.releases]);\n  var release = useMemo(function () {\n    return state.releases[state.index];\n  }, [state]);\n  useEffect(function () {\n    getFolders().then(succeed).catch(fail);\n  }, [fail, succeed]);\n  return {\n    release: release,\n    shuffle: shuffle\n  };\n}, \"kHmtZr2OQABv64WxX3xwfM2Nx5k=\");","map":{"version":3,"sources":["/Users/fernandocamargodelbuono/_dev/disco-roulette/src/components/app/hooks.js"],"names":["useState","getInitialState","state","setState","fail","useCallback","error","message","update","set","response","releases","reduce","flatten","index","random","length","succeed","folders","Promise","all","map","getReleases","then","shuffle","release","useMemo","useEffect","getFolders","catch"],"mappings":";;;;AAAA,kBAAe,YAAM;AAAA;;AACnB,kBAA0BA,QAAQ,CAACC,eAAe,EAAhB,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,IAAI,GAAGC,WAAW,CACtB;AAAA,QAAYC,KAAZ,QAAGC,OAAH;AAAA,WAAwBJ,QAAQ,CAACK,MAAM,CAAC;AAAEF,MAAAA,KAAK,EAALA;AAAF,KAAD,CAAP,CAAhC;AAAA,GADsB,EAEtB,EAFsB,CAAxB;AAIA,MAAMG,GAAG,GAAGJ,WAAW,CAAC,UAAAK,QAAQ,EAAI;AAClC,QAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,OAAhB,CAAjB;AACA,QAAMC,KAAK,GAAGC,MAAM,CAACJ,QAAQ,CAACK,MAAV,CAApB;AAEA,WAAOb,QAAQ,CAACK,MAAM,CAAC;AAAEM,MAAAA,KAAK,EAALA,KAAF;AAASH,MAAAA,QAAQ,EAARA;AAAT,KAAD,CAAP,CAAf;AACD,GALsB,EAKpB,EALoB,CAAvB;AAMA,MAAMM,OAAO,GAAGZ,WAAW,CACzB,UAAAa,OAAO;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,GAAR,CAAYC,WAAZ,CAAZ,EAAsCC,IAAtC,CAA2Cd,GAA3C,CAAJ;AAAA,GADkB,EAEzB,CAACA,GAAD,CAFyB,CAA3B;AAIA,MAAMe,OAAO,GAAGnB,WAAW,CACzB;AAAA,WAAMF,QAAQ,CAACK,MAAM,CAAC;AAAEM,MAAAA,KAAK,EAAEC,MAAM,CAACb,KAAK,CAACS,QAAN,CAAeK,MAAhB;AAAf,KAAD,CAAP,CAAd;AAAA,GADyB,EAEzB,CAACd,KAAK,CAACS,QAAP,CAFyB,CAA3B;AAIA,MAAMc,OAAO,GAAGC,OAAO,CAAC;AAAA,WAAMxB,KAAK,CAACS,QAAN,CAAeT,KAAK,CAACY,KAArB,CAAN;AAAA,GAAD,EAAoC,CAACZ,KAAD,CAApC,CAAvB;AAEAyB,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,UAAU,GACPL,IADH,CACQN,OADR,EAEGY,KAFH,CAESzB,IAFT;AAGD,GAJQ,EAIN,CAACA,IAAD,EAAOa,OAAP,CAJM,CAAT;AAMA,SAAO;AAAEQ,IAAAA,OAAO,EAAPA,OAAF;AAAWD,IAAAA,OAAO,EAAPA;AAAX,GAAP;AACD,CA7BD","sourcesContent":["export default () => {\n  const [state, setState] = useState(getInitialState());\n  const fail = useCallback(\n    ({ message: error }) => setState(update({ error })),\n    []\n  );\n  const set = useCallback(response => {\n    const releases = response.reduce(flatten);\n    const index = random(releases.length);\n\n    return setState(update({ index, releases }));\n  }, []);\n  const succeed = useCallback(\n    folders => Promise.all(folders.map(getReleases)).then(set),\n    [set]\n  );\n  const shuffle = useCallback(\n    () => setState(update({ index: random(state.releases.length) })),\n    [state.releases]\n  );\n  const release = useMemo(() => state.releases[state.index], [state]);\n\n  useEffect(() => {\n    getFolders()\n      .then(succeed)\n      .catch(fail);\n  }, [fail, succeed]);\n\n  return { release, shuffle };\n};\n"]},"metadata":{},"sourceType":"module"}