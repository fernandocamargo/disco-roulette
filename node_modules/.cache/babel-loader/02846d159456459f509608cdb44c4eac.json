{"ast":null,"code":"import _slicedToArray from \"/Users/fernandocamargodelbuono/_dev/disco-roulette/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { create } from 'axios';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nexport var USER = 'pr0n';\nexport var client = create({\n  headers: {\n    'user-agent': 'ElMundoFrio/1.0'\n  },\n  baseURL: 'https://api.discogs.com'\n});\nexport var getFolders = function getFolders() {\n  return client.get(\"/users/\".concat(USER, \"/collection/folders\")).then(function (_ref) {\n    var folders = _ref.data.folders;\n    return folders;\n  });\n};\nexport var getReleases = function getReleases(_ref2) {\n  var id = _ref2.id,\n      _ref2$url = _ref2.url,\n      url = _ref2$url === void 0 ? \"/users/\".concat(USER, \"/collection/folders/\").concat(id, \"/releases\") : _ref2$url,\n      _ref2$stack = _ref2.stack,\n      current = _ref2$stack === void 0 ? [] : _ref2$stack;\n\n  var check = function check(_ref3) {\n    var _ref3$data = _ref3.data,\n        pagination = _ref3$data.pagination.urls.next,\n        releases = _ref3$data.releases;\n    var next = current.concat(releases);\n    return !pagination ? next : getReleases({\n      stack: next,\n      url: pagination\n    });\n  };\n\n  return client.get(url).then(check);\n};\nexport var flatten = function flatten(current, next) {\n  return current.concat(next);\n};\nexport var getInitialState = function getInitialState() {\n  return {\n    error: null,\n    index: null,\n    loading: true,\n    releases: []\n  };\n};\nexport var update = function update(next) {\n  return function (current) {\n    return Object.assign({}, current, next, {\n      loading: false\n    });\n  };\n};\nexport var random = function random(until) {\n  return Math.floor(Math.random() * until) + 1 - 1;\n};\nexport default _s(function () {\n  _s();\n\n  var _useState = useState(getInitialState()),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var fail = useCallback(function (_ref4) {\n    var error = _ref4.message;\n    return setState(update({\n      error: error\n    }));\n  }, []);\n  var set = useCallback(function (response) {\n    var releases = response.reduce(flatten);\n    var index = random(releases.length);\n    return setState(update({\n      index: index,\n      releases: releases\n    }));\n  }, []);\n  var succeed = useCallback(function (folders) {\n    return Promise.all(folders.map(getReleases)).then(set);\n  }, [set]);\n  var shuffle = useCallback(function () {\n    return setState(update({\n      index: random(state.releases.length)\n    }));\n  }, [state.releases]);\n  var release = useMemo(function () {\n    return state.releases[state.index];\n  }, [state]);\n  useEffect(function () {\n    getFolders().then(succeed).catch(fail);\n  }, [fail, succeed]);\n  return {\n    release: release,\n    shuffle: shuffle\n  };\n}, \"kHmtZr2OQABv64WxX3xwfM2Nx5k=\");","map":{"version":3,"sources":["/Users/fernandocamargodelbuono/_dev/disco-roulette/src/components/app/hooks.js"],"names":["create","useCallback","useEffect","useMemo","useState","USER","client","headers","baseURL","getFolders","get","then","folders","data","getReleases","id","url","stack","current","check","pagination","urls","next","releases","concat","flatten","getInitialState","error","index","loading","update","Object","assign","random","until","Math","floor","state","setState","fail","message","set","response","reduce","length","succeed","Promise","all","map","shuffle","release","catch"],"mappings":"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","sourcesContent":["import { create } from 'axios';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nexport const USER = 'pr0n';\n\nexport const client = create({\n  headers: { 'user-agent': 'ElMundoFrio/1.0' },\n  baseURL: 'https://api.discogs.com',\n});\n\nexport const getFolders = () =>\n  client\n    .get(`/users/${USER}/collection/folders`)\n    .then(({ data: { folders } }) => folders);\n\nexport const getReleases = ({\n  id,\n  url = `/users/${USER}/collection/folders/${id}/releases`,\n  stack: current = [],\n}) => {\n  const check = ({\n    data: {\n      pagination: {\n        urls: { next: pagination },\n      },\n      releases,\n    },\n  }) => {\n    const next = current.concat(releases);\n\n    return !pagination ? next : getReleases({ stack: next, url: pagination });\n  };\n\n  return client.get(url).then(check);\n};\n\nexport const flatten = (current, next) => current.concat(next);\n\nexport const getInitialState = () => ({\n  error: null,\n  index: null,\n  loading: true,\n  releases: [],\n});\n\nexport const update = next => current =>\n  Object.assign({}, current, next, { loading: false });\n\nexport const random = until => Math.floor(Math.random() * until) + 1 - 1;\n\nexport default () => {\n  const [state, setState] = useState(getInitialState());\n  const fail = useCallback(\n    ({ message: error }) => setState(update({ error })),\n    []\n  );\n  const set = useCallback(response => {\n    const releases = response.reduce(flatten);\n    const index = random(releases.length);\n\n    return setState(update({ index, releases }));\n  }, []);\n  const succeed = useCallback(\n    folders => Promise.all(folders.map(getReleases)).then(set),\n    [set]\n  );\n  const shuffle = useCallback(\n    () => setState(update({ index: random(state.releases.length) })),\n    [state.releases]\n  );\n  const release = useMemo(() => state.releases[state.index], [state]);\n\n  useEffect(() => {\n    getFolders()\n      .then(succeed)\n      .catch(fail);\n  }, [fail, succeed]);\n\n  return { release, shuffle };\n};\n"]},"metadata":{},"sourceType":"module"}